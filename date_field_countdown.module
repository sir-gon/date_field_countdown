<?php
/**
 * Implements hook_libraries_info().
 */

function date_field_countdown_libraries_info() {

  $libraries['countdown'] = array(
    'name' => 'countdown',
    'vendor url' => 'http://tutorialzine.com/2011/12/countdown-jquery/',
    'download url' => 'http://tutorialzine.com/2011/12/countdown-jquery/',
      'version arguments' => array(
      'file' => 'jquery.countdown.js',
      'pattern' => '@version\s+([0-9a-zA-Z\.-]+)@', 
      'lines' => 7,
      'cols' => 30,
    ),
    'files' => array(
      'js' => array(
        'jquery.countdown.js'
      ),
      'css' => array(
        'jquery.countdown.css'
      )
    ),
  );

  return $libraries;
}

/**
* Implements hook_theme().
*/
function date_field_countdown_theme() {
  
  $library = libraries_load('countdown');

  return array(
    'date_field_cowntdown' => array(
      'template' => 'date_field_cowntdown',
      'variables' => array(
        'timestamp' => NULL,
        'time_out_message' => NULL,
        'time_left_message' => NULL,
        'time_out_hide_timer' => NULL,
        'date_type' => NULL,
      ),
    ),
  );
}

/**
* Implements hook_field_formatter_info().
*/
function date_field_countdown_field_formatter_info() {
  $info = array(
    'countdown' => array(
      'label' => t('Countdown'), 
      'field types' => array('date', 'datestamp', 'datetime'),
      'description' => t(''),
      'settings'  => array(
        'time_out_message' => t('it\'s time!'),
        'time_left_message' => t('@days days, @hours hours, @minutes minutes, @seconds seconds left!'),
        'time_out_hide_timer' => 'Yes',
        'show_date_time' => 'No',
        'date_type' => 'long'
      ),
    ), 
  );
  return $info;
 }

/**
* Implements hook_field_formatter_view().
*/
function date_field_countdown_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {

  $settings = $display['settings'];
  $element = array();
  
  switch ($display['type']) {
    case 'countdown':

      foreach ($items as $delta => $item) {

        dsm($item);

        if(!isset($item['date_type']))
          $item['date_type'] = 'none';

        $element[$delta] = array(
          '#theme' => 'date_field_cowntdown', 
          '#timestamp' => $item['value']* 1000,
          '#time_out_message' => $settings['time_out_message'],
          '#time_left_message' => $settings['time_left_message'],
          '#time_out_hide_timer' => $settings['time_out_hide_timer'],
          '#date_type' => $settings['date_type']
        );


        switch($item['date_type']) {

          case 'datestamp':

            $element[$delta]['#timestamp'] = $item['value'] * 1000;
            if(isset($item['offset']))
            {
              $element[$delta]['#timestamp'] = $element[$delta]['#timestamp'] + ($item['offset'] * 1000);
            }


          break;
          case 'date': // ISO DATE

            $d1=new DateTime($item['value']);
            
            $element[$delta]['#timestamp'] = (int) $d1->getTimestamp() * 1000;
            if(isset($item['offset']))
            {
              $element[$delta]['#timestamp'] = $element[$delta]['#timestamp'] + ($item['offset'] * 1000);
            }

          break;
          case 'datetime': // Reverse date time

            $d1=new DateTime($item['value']);

            $element[$delta]['#timestamp'] = (int) $d1->getTimestamp() * 1000;
            /*
            if(isset($item['offset']))
            {
              $element[$delta]['#value'] = $element[$delta]['#value'] + ($item['offset'] * 1000);
            }
            */

          break;
        }

    }
    break;
  }
  return $element;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function date_field_countdown_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  //This gets the view_mode where our settings are stored
  $display = $instance['display'][$view_mode];
  //This gets the actual settings


  $settings = $display['settings'];

  dsm($settings);

  //Initialize the element variable
  $element = array();
  //Add your select box
  $element['time_out_message'] = array(
    '#type'           => 'textfield',
    '#title'          => t('Time out message'), // Widget label
    '#description'    => t(''), // Helper text
    '#default_value'  => $settings['time_out_message'],
  );
  $element['time_left_message'] = array(
    '#type'           => 'textfield',                        // Use a textbox
    '#title'          => t('Time left message'),                      // Widget label
    '#description'    => t(''),  // helper text
    '#default_value'  => $settings['time_left_message'],               // Get the value if it's already been set
  );
  $element['time_out_hide_timer'] = array(
    '#type'           => 'radios',                        
    '#title'          => t('Time left message'),                      // Widget label
    '#description'    => t(''),  // helper text
    '#options' => array( 0 => t('No'), 1 => t('Yes') ),
    '#default_value'  => $settings['time_out_hide_timer'],               // Get the value if it's already been set
  );

  $element['date_type'] = array(
    '#type'           => 'select',                        
    '#title'          => t('Date Type'),                      // Widget label
    '#description'    => t(''),  // helper text
    '#options' => array( ),
    '#default_value'  => $settings['time_out_hide_timer'],               // Get the value if it's already been set
  );

  // Get list of date format types.
  $types = system_get_date_types();

  foreach ($types as $type => $type_values) {
    $element['date_type']['#options'][$type] = $type_values['title'];
  }

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary
 */
function date_field_countdown_field_formatter_settings_summary($field, $instance, $view_mode) {

  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = '';

  $summary .= t('<b>Time out message</b>: "@message"', array(
    '@message'  => isset($settings['time_out_message']) ? $settings['time_out_message'] : ''
    ));

  $summary .= '<br>';

  $summary .= t('<b>Time left message</b>: "@message"', array(
    '@message'  => isset($settings['time_left_message']) ? $settings['time_left_message'] : ''
    ));

  $summary .= '<br>';

  $summary .= t('<b>Date Type </b>: "@message"', array(
    '@message'  => isset($settings['date_type']) ? $settings['date_type'] : ''
    ));
  return $summary;
}

